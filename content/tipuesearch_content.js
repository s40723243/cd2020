var tipuesearch = {"pages": [{'title': 'Weeks', 'text': 'Week1-5 \n Week6-9 \n Week10-14 \n Week15-18 \n', 'tags': '', 'url': 'Weeks.html'}, {'title': 'Week1-5', 'text': 'Week1 \n 建立個人的cd2020倉儲 \n 1.下載 2019Fall可攜套件.7z  打開舊的start \n 2.登入自己的github，建立一個cd2020的新倉儲 \n 3.輸入\xa0 git clone \xa0 https://github.com/s40723243/cd2020 \xa0 \n 4.輸入git submodule add  https://github.com/mdecourse/cmsimde.git\xa0 \n 5. 將up_dir的裡的資料複 製到cd2020 \n 6.打開近端開始編譯自己的倉儲 \n \n Week2 \n python 3.7.3系統更新至python 3.8.2 \n 1.新增一個資料夾cd2020，在cd2020下新建資料夾data，在data下新增資料夾py382及 wscite432、portablegit \n 2.進入Python，點選Downloads下的 Windows ，並點選 Latest Python 3 Release - Python 3.8.2 \n 3.下載 Windows x86-64 executable installer \n 4. 開始下載，將pip選項取消，接著按下next並將檔案下載至py382。 \n 5. 下載SciTE系統 \xa0 full 64-bit download ， 解壓縮至data下的資料夾wscite432。 \n \xa06. 建立新的start.bat及stop.bat \n 7.下載MSYS2\xa0 msys2-x86_64-20190524.exe \xa0至data下。 \n 8.下載 PortableGit \xa0 64-bit Git for Windows Portable \xa0 至\xa0 portablegit的資料夾下。 \n 9. 安裝pip，到 https://bootstrap.pypa.io/get-pip.py 頁面，另存新檔到data下。 \n \n \n 第二組第一次直播內容 \n \n \xa0分工內容 \n 四輪車的組員 \n 40723221 (group leader) :4輪車\xa0 (四輪車小組長) \n 40623252:4輪車 \n 40723222:4輪車 \n 40723236:4輪車 \n 40723240:4輪車 \n 40723243:4輪車(本人) \n 40732331:4輪車\xa0 \n \n Week3 \n 第三周報告影片: \n \n assignment1 \n PDF檔連結: file:///C:/Users/curry/OneDrive/桌面/Assignment1.pdf \n \n', 'tags': '', 'url': 'Week1-5.html'}, {'title': 'Week6-9', 'text': 'week6 \n W6直播分組 \n 分工內容: \n topic0: 40723237 40723221 40723222 40723228 40723243 40723244 40723236 40623117 \n topic1: 40723221 40723222 40623252 40523253 40723249 40732331 40723240 40723237 \n 直播影片: \n \n \n Topic0: \n DigitalProductCollaboration翻譯 \n IndustrialAndEngineeringProductDesignCollaboration翻譯 \n Topic1: \n   MechanicalDesignProcess翻譯 \n \n Assignment2: \n 網址: https://github.com/s40723243/cd2020/blob/master/downloads/Assignment2. pdf \n \n week7 \n \n Week8 \n 安裝下面三個模組 \n 1.pip install opencv-python \n 2.pip install imutils \n 3.pip install numpy \n \xa0', 'tags': '', 'url': 'Week6-9.html'}, {'title': 'Week10-14', 'text': 'week10 \n gm用戶登陸設置 \n 1.登錄自己的Gmail，到 https://console.developers.google.com/projectselector2/apis/dashboard?supportedpurview=project \n 2.建立專案，名字隨意 \n 3.去老師的 cd2020pj1 ，git clone到tmp下 \n 4.啟用Google的API服務，選Google Domain API啟用 \n 5.憑證-設定同意畫面 \n 6.在API 的服務 ，點開憑證 建立 客戶端ID類型 \n 7.把帳號密碼存到tmp底下 \n 8.開啟leo，將cd2020pj1.leo拉進去，編輯自己設定的路徑和名稱 \n 9.儲存後按darwROC ，再輸入 pip install authomatic \n 10.進入cd2020pj1，打開python wsgi.py即可 \n 影片網址: https://www.youtube.com/watch?v=62nlaVLgXNQ&feature=youtu.be \n \n week11 \n coppeliasim:40723221 \n MSModelingAndTFApproaches.pdf.  207頁:7人 40723249 40623117 40723221 40723228 40723236 40723237 40723243 \n MechatronicDesignCases.pdf.  46頁:2人 40723222 40723244 \n topic3: \n MechaFutureAndChallenges.pdf.  38頁:2人 40623252 40523253 \n MechaEducFutureNeed.pdf . 20頁:1人 40723240 \n 開會影片; https://www.youtube.com/watch?v=jr4IxIwdHLk&feature=emb_title \n \n Vrep虛擬主機設置 \n 1.先下載VirtualBoxrtualBox跟Ubuntu \n 2.將Ubuntu匯入 \n 3.設定網路 Host-Only -Only 啟動Ubuntu主機 \n 4.輸入密碼kmol2020登入，開啟LXTermial \n 5.輸入xterm& \n 6.用ls來顯示，在用cd進入資料夾內 \n 7.輸入./coppeliaSim.sh來開啟Vrep \n 影片網址: https://www.youtube.com/watch?v=SD-VhrCFlNQ', 'tags': '', 'url': 'Week10-14.html'}, {'title': 'Week15-18', 'text': '\n', 'tags': '', 'url': 'Week15-18.html'}, {'title': 'Assignment', 'text': '', 'tags': '', 'url': 'Assignment.html'}, {'title': 'assignment1', 'text': 'assignment1 : https://github.com/s40723243/cd2020/tree/master/downloads \n \n \n', 'tags': '', 'url': 'assignment1.html'}, {'title': 'assignment2', 'text': 'assignment2: https://github.com/s40723243/cd2020/blob/master/downloads/Assignment2.pdf \n \n \n \n \n', 'tags': '', 'url': 'assignment2.html'}, {'title': 'assignment3', 'text': 'assignment3網址: https://github.com/s40723243/cd2020/blob/master/downloads/Assignment3.pdf \n \n \n \n \n', 'tags': '', 'url': 'assignment3.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.', 'tags': '', 'url': 'Develop.html'}]};